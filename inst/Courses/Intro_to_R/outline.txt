TODO:

- List of all functions used/introduced in each module

- Introduce help files in first module!!!


### Intro to R - Content Outline ###
####################################

# Module1 (assignment, numeric vectors, vector arithmetic):

- R as a calculator

- motivation for programming

- creating variables with the assignment operator

- numeric vector = simplest data type in R

- c()

- `?` function

- vector arithmetic

- vector recycling

####################################

# Module2 (sequences)

- `:`

- `?` function for operators

- seq() 
	- by, length arguments

- seq_along()

- length()

- rep()
	- times, each arguments

####################################

# Module3 (other types of vectors)

- simplest, most common data structure in R is the vector

- 2 flavors of vectors
	- atomic vectors: only one data type
	- lists: many data types

- numeric vector is a type of atomic vector
	
- other most common types of atomic vectors
	- logical
	- character

- missing values
	- NA and NaN
	- is.na() and is.nan()



--------------------------------------

FUTURE MODULES:


	
# Module4 (coercion)

- motivation for dedicating entire module to coercion

- automatic vs. explicit coercion

- start with explicit examples

- have user guess automatic


# Module5 (other data structures)

- matrices 
	- vectors with a dimension attribute
	- constructed column-wise
	- construct from vector by adding dim attribute
- lists
	- can contain multiple data types
	- very important in R
- factors
	- represent categorical data
	- think of as an integer vector where each integer has a label
- data frames
	- used to store tabular data
	- special type of list where every element is same length
	- typeof(df) # "list" vs. class(df) # "data.frame" -- see testing and coersion, data structures, hadley
	- heterogeneous
- attributes/names


# Module6 (subsetting):

# Module6 (control structures):
