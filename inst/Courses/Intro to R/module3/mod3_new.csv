"Class","Output","CorrectAnswer","AnswerChoices","AnswerTests","Hint","Figure","VideoLink","Tag"
"text","The simplest and most common data structure in R is the vector.",NA,NA,NA,NA,NA,NA,NA
"text","Vectors come in two different flavors: atomic vectors and lists. An atomic vector contains exactly one data type, whereas a list may contain multiple data types. We'll explore atomic vectors further before we get to lists.",NA,NA,NA,NA,NA,NA,NA
"text","In the last lesson, we dealt entirely with numeric vectors, which are one type of atomic vector. Other types of atomic vectors include logical, character, integer, and complex.",NA,NA,NA,NA,NA,NA,NA
"text","Logical vectors can contain the values `TRUE`, `FALSE`, and `NA` (for ""not available""). These values are generated as the result of ""conditions"". Let's experiment with some simple conditions.",NA,NA,NA,NA,NA,NA,NA
"cmd_question","First, create a numeric vector `num_vect` that contains the values 0.5, 55, -10, and 6.","num_vect <- c(0.5, 55, -10, 6)",NA,NA,NA,NA,NA,NA
"cmd_question","Now, create a variable called `tf` that gets the result of `num_vect < 1`, which is read as ""num_vect is less than 1"".","tf <- num_vect < 1",NA,NA,NA,NA,NA,NA
"mult_question","What do you think `tf` will look like?",NA,"a vector of 4 logical values; a single logical value",NA,NA,NA,NA,NA
"cmd_question","Print the contents of `tf` now.","tf",NA,NA,NA,NA,NA,NA
"text","The statement `num_vect < 1` is called a ""condition"" and `tf` tells us whether each corresponding element of our numeric vector `num_vect` satisfies this condition.",NA,NA,NA,NA,NA,NA,NA
"text","The first element of `num_vect` is 0.5, which is less than 1 and therefore the statement 0.5 < 1 is `TRUE`. The second element of `num_vect` is 55, which is greater than 1, so the statement 55 < 1 is `FALSE`. The same logic applies for the third and forth elements.",NA,NA,NA,NA,NA,NA,NA
"cmd_question","Let's try another. Type `num_vect >= 10` without assigning the result to a new variable.","num_vect >= 6",NA,NA,NA,NA,NA,NA
"text","This time, we are asking whether each individual element of `num_vect` is greater than OR equal to 6. Since only 55 and 6 are greater than or equal to 6, the second and forth elements of the result are `TRUE` and the first and third elements are `FALSE`.",NA,NA,NA,NA,NA,NA,NA
"text","The `<` and `>=` symbols in these examples are called ""logical operators"". Other logical operators include `>`, `<=`, `==` for exact equality, and `!=` for inequality.",NA,NA,NA,NA,NA,NA,NA
"text","If we have two logical expressions, `A` and `B`, we can ask whether at least one is `TRUE` with `A | B` (logical ""or"" a.k.a. ""union"") or whether they are both `TRUE` with `A & B` (logical ""and"" a.k.a. ""intersection""). Lastly, `!A` is the negation of `A` and is `TRUE` when `A` is `FALSE` and vice versa.",NA,NA,NA,NA,NA,NA,NA
"text","It's a good idea to spend some time playing around with various combinations of these logical operators until you get comfortable with their use. We'll do a few examples here to get you started.",NA,NA,NA,NA,NA,NA,NA
"text","Try your best to predict the result of each of the following statements. You can use pencil and paper to work them out if it's helpful. If you get stuck, just guess and you've got a 50% chance of getting the right answer!",NA,NA,NA,NA,NA,NA,NA
"mult_question","`(3 > 5) & (4 == 4)`",NA,"`TRUE`; `FALSE`",NA,NA,NA,NA,NA
"mult_question","`(TRUE == TRUE) | (TRUE == FALSE)`",NA,"`TRUE`; `FALSE`",NA,NA,NA,NA,NA
"mult_question","`((111 >= 111) | !(TRUE)) & ((4 + 1) == 5)`",NA,"`TRUE`; `FALSE`",NA,NA,NA,NA,NA
"text","Don't worry if you found these to be tricky. They're supposed to be. Working with logical statements in R takes practice, but your efforts will be rewarded in future lessons (e.g. subsetting and control structures).",NA,NA,NA,NA,NA,NA,NA
